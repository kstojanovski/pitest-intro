<?xml version="1.0" encoding="UTF-8"?>
<mutations partial="true">
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rule.java</sourceFile><mutatedClass>com.acme.Rule</mutatedClass><mutatedMethod>simpleRule</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rule.java</sourceFile><mutatedClass>com.acme.Rule</mutatedClass><mutatedMethod>simpleRule</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>com.acme.RuleTest.testRule(com.acme.RuleTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rule.java</sourceFile><mutatedClass>com.acme.Rule</mutatedClass><mutatedMethod>simpleRule</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>7</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest>com.acme.RuleTest.testRule(com.acme.RuleTest)</killingTest><description>replaced int return with 0 for com/acme/Rule::simpleRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rule.java</sourceFile><mutatedClass>com.acme.Rule</mutatedClass><mutatedMethod>simpleRule</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>13</index></indexes><blocks><block>2</block></blocks><killingTest>com.acme.RuleTest.testRule(com.acme.RuleTest)</killingTest><description>replaced int return with 0 for com/acme/Rule::simpleRule</description></mutation>
</mutations>
